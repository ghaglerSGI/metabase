# This Dockerfile is useful when you want to build a simple Uberjar and export it locally, simply run (without the quotes):
# "DOCKER_BUILDKIT=1 docker build -f Dockerfile_export_jar --output target/uberjar/ ."
# and you will have an metabase.jar Uberjar in the target/uberjar folder

###################
# STAGE 1: builder
###################

FROM --platform=linux/amd64 eclipse-temurin:11.0.12_7-jdk-focal as builder

ARG MB_EDITION=oss CI=true 

WORKDIR /app/

RUN curl -fsSL https://deb.nodesource.com/setup_lts.x | bash - \
    # install Node LTS and Yarn from their repos
    && curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \
    && echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list \
    && apt-get update && apt-get upgrade -y && apt-get install -y git nodejs yarn \
    # installing Clojure CLI
    && curl -O https://download.clojure.org/install/linux-install-1.10.3.986.sh && chmod +x linux-install-1.10.3.986.sh && ./linux-install-1.10.3.986.sh \
    # downloading certs from AWS and Azure so we don't need to do it in the next step and only install those
    && mkdir /app/certs \
    && curl https://s3.amazonaws.com/rds-downloads/rds-combined-ca-bundle.pem -o /app/certs/rds-combined-ca-bundle.pem \
    && curl https://cacerts.digicert.com/DigiCertGlobalRootG2.crt.pem -o /app/certs/DigiCertGlobalRootG2.crt.pem

COPY . .
RUN INTERACTIVE=false CI=$CI MB_EDITION=$MB_EDITION bin/build

# ###################
# # STAGE 2: export-stage
# ###################

FROM scratch as export-stage

COPY --from=builder /app/target/uberjar/metabase.jar /